import readFile from io

val input = if readFile("./input.txt") |input|
  input.trim().split(",").map(i => i.parseInt() ?: -1)
else []

func max(nums: Int[]): Int {
  var M = 0
  for n in nums
    if n > M M = n
  M
}

func min(nums: Int[]): Int {
  var M = 1000000
  for n in nums {
    if n < M
      M = n
  }
  M
}

func part1(): Int {
  val (min, max) = (min(input), max(input))

  func fuel(target: Int, crabs: Int[]): Int =
    crabs.reduce(0, (acc, c) => acc + (c - target).abs())

  var minF = 1000000
  for i in range(min, max) {
    val f = fuel(i, input)
    if f < minF minF = f
  }
  minF
}
println(part1()) // 341558

func part2(): Int {
  val (min, max) = (min(input), max(input))

  func fuel(target: Int, crabs: Int[]): Int =
    crabs.reduce(0, (acc, c) => {
      val N = (c - target).abs()
      acc + (N * (N + 1) / 2).round()
    })

  var minF = 100000000
  for i in range(min, max) {
    val f = fuel(i, input)
    if f < minF minF = f
  }
  minF
}
println(part2()) // 93214037
